---
workflow:
  rules:
    - if: $CI_COMMIT_REF_NAME =~ /dbg\//
      when: never
    - if: $CI_COMMIT_REF_NAME =~ /dev\// && $CI_COMMIT_TITLE =~ /WIP/
      when: never
    - when: always

stages:
  - precheck
  - test
  - functional
  - package
  - publish

variables:
  DEBIAN_FRONTEND: noninteractive
  TZ: Europe/Paris
  GIT_SUBMODULE_STRATEGY: normal

###############################################################################
#
#                             PRECHECK STAGE
#
###############################################################################
precheck:
  image: python:3.10
  stage: precheck
  tags: [ci.inria.fr]
  script:
    - pip install pre-commit
    - pre-commit run --all-files

###############################################################################
#
#                             TEST STAGE
#
###############################################################################
python3.7:
  image: python:3.7
  stage: test
  tags: [ci.inria.fr]
  script:
    - pip install tox
    - tox -e py37

python3.8:
  image: python:3.8
  stage: test
  tags: [ci.inria.fr]
  script:
    - pip install tox
    - tox -e py38

python3.9:
  image: python:3.9
  stage: test
  tags: [ci.inria.fr]
  script:
    - pip install tox
    - tox -e py39

python3.10:
  image: python:3.10
  stage: test
  tags: [ci.inria.fr]
  script:
    - pip install tox
    - tox -e py310
  coverage: /^TOTAL\s+\d+\s+\d+\s+(\d+\%)$/
  artifacts:
    when: always
    paths:
      - htmlcov
    reports:
      junit: utest.xml
      coverage_report:
        coverage_format: cobertura
        path: cov.xml

pep8:
  image: python:3.10
  stage: test
  tags: [ci.inria.fr]
  script:
    - pip install tox
    - tox -e pep8

pylint:
  image: python:3.10
  stage: test
  tags: [ci.inria.fr]
  script:
    - pip install tox
    - tox -e pylint

typecheck:
  image: python:3.10
  stage: test
  tags: [ci.inria.fr]
  script:
    - pip install tox
    - tox -e typecheck

sonar:
  image: python:3.10-buster
  stage: test
  allow_failure: true
  only:
    - tags
  tags:
    - large
    - ci.inria.fr
  script:
    - pip install -e .
    - apt update
    - apt install -y wget unzip openjdk-11-jre-headless libpython3-dev --no-install-recommends
    - pip install pylint
    - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.4.0.2170-linux.zip
    - unzip sonar-scanner-cli-4.4.0.2170-linux.zip
    - mv sonar-scanner-4.4.0.2170-linux sonar
    - wget --no-check-certificate https://sonarqube.inria.fr/static/digicertca.crt
    - keytool -import -alias inria -storepass "changeit" -keystore $(pwd)/sonar/jre/lib/security/cacerts -file digicertca.crt
    - pip install tox && tox -e py37
    - sonar/bin/sonar-scanner -X -Dsonar.login=$SONAR_LOGIN

doc:
  image: python:3.10
  stage: test
  tags: [ci.inria.fr]
  script:
    - apt update
    - apt install -y pandoc
    - pip install tox
    - tox -e docs
  artifacts:
    paths:
      - docs/_build/html

###############################################################################
#
#                             FUNCTIONAL STAGE
#
###############################################################################

## TEST VARIOUS ANSIBLE VERSIONS
#-----------------------------------------------
test_ansible_3: &ansible
  image: debian:11
  stage: functional
  tags: [ci.inria.fr]
  variables:
    ANSIBLE_VERSION: ">=3,<4"
  script:
    - |
      apt update
      apt install -y python3 python3-pip iproute2 cmake zlib1g-dev libssl-dev libffi-dev
      ip a
      python3 -m pip install -e .
      cd enoslib/tests/functional

      # test several versions of ansible
      python3 -m pip uninstall -y ansible ansible-base ansible-core && pip install ansible${ANSIBLE_VERSION}
      python3 test_static_play_on.py
      python3 test_static_run_ansible.py
      python3 test_static_run_command.py

test_ansible_4:
  <<: *ansible
  variables:
    ANSIBLE_VERSION: ">=4,<5"

test_ansible_5:
  <<: *ansible
  variables:
    ANSIBLE_VERSION: ">=5,<6"

test_ansible_6:
  <<: *ansible
  variables:
    ANSIBLE_VERSION: ">=6,<7"

## TEST AGAINST DIFFERENT DISTROS
#-----------------------------------------------
test_static_run_command$debian11$: &debian11
  image: debian:11
  stage: functional
  tags: [ci.inria.fr]
  script:
    - apt update
    - apt install -y python3 python3-pip iproute2 cmake zlib1g-dev libssl-dev libffi-dev
    - ip a
    - python3 -m pip install -e .[analysis]
    - cd enoslib/tests/functional
    - python3 ${CI_JOB_NAME//$*$/}.py

test_static_gather_facts$debian11$:
  <<: *debian11

test_static_play_on$debian11$:
  <<: *debian11

test_static_run_ansible$debian11$:
  <<: *debian11

# monitoring functional tests are failing lately
# test_monitoring_service$debian11$:
#   <<: *debian11

test_static_tasks$debian11$:
  <<: *debian11

test_discover_networks$debian11$:
  <<: *debian11

test_dstat$debian11$:
  <<: *debian11

## debian latest
#-----------------------------------------------
test_static_run_command$debian$: &debian
  <<: *debian11
  image: debian:latest

test_static_gather_facts$debian$:
  <<: *debian

test_static_play_on$debian$:
  <<: *debian

test_static_run_ansible$debian$:
  <<: *debian

# test_monitoring_service$debian$:
#  <<: *debian

test_static_tasks$debian$:
  <<: *debian

test_discover_networks$debian$:
  <<: *debian

test_dstat$debian$:
  <<: *debian

## ubuntu 1804
#-----------------------------------------------
test_static_run_command$ubuntu1804$: &ubuntu2004
  <<: *debian11
  image: ubuntu:20.04

test_static_gather_facts$ubuntu1804$:
  <<: *ubuntu2004

test_static_play_on$ubuntu1804$:
  <<: *ubuntu2004

test_static_run_ansible$ubuntu1804$:
  <<: *ubuntu2004

# test_monitoring_service$ubuntu2004$:
#   <<: *ubuntu2004

test_static_tasks$ubuntu2004$:
  <<: *ubuntu2004

test_discover_networks$ubuntu2004$:
  <<: *ubuntu2004

test_dstat$ubuntu2004$:
  <<: *ubuntu2004

## ubuntu latest
#-----------------------------------------------
test_static_run_command$ubuntu$: &ubuntu
  <<: *debian11
  image: ubuntu:latest

test_static_gather_facts$ubuntu$:
  <<: *ubuntu

test_static_play_on$ubuntu$:
  <<: *ubuntu

test_static_run_ansible$ubuntu$:
  <<: *ubuntu

# test_monitoring_service$ubuntu$:
#   <<: *ubuntu

test_static_tasks$ubuntu$:
  <<: *ubuntu

test_discover_networks$ubuntu$:
  <<: *ubuntu

test_dstat$ubuntu$:
  <<: *ubuntu

###############################################################################
#
#                             PACKAGE STAGE
#
###############################################################################

#### Entering the release zone
package:
  image: python:3.7
  stage: package
  tags: [ci.inria.fr]
  only:
    - tags
  script:
    - python setup.py bdist_wheel
  artifacts:
    paths:
      - dist/

###############################################################################
#
#                             PUBLISH STAGE
#
###############################################################################

pages:
  # when: manual
  stage: publish
  tags: [ci.inria.fr]
  only:
    - tags
  dependencies:
    - doc
  script:
    - mkdir -p public/
    - cp -r docs/_build/html/* public/
  artifacts:
    paths:
      - public

pypi:
  image: python:3.7
  stage: publish
  tags: [ci.inria.fr]
  only:
    - tags
  dependencies:
    - package
  script:
    - pip install twine
      # credentials are set in the env by gitlab
    - twine upload dist/* --verbose
