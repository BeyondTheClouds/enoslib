- name: Installing dependencies
  apt:
    name:
      - curl
      - python3-pip
    state: present
    update_cache: yes

- name: Installing docker python bindings
  pip:
    name: docker
    state: present

- name: Creating docker state directory
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ bind_var_docker }}"
    - /var/lib/docker
  when:
    - bind_var_docker is defined

- name: Bind mount the docker volume directory
  mount:
    path: /var/lib/docker
    src: "{{ bind_var_docker }}"
    opts: bind
    state: mounted
    fstype: none
  when:
    - bind_var_docker is defined

- name: Installing docker
  shell: which docker || (curl -sSL https://get.docker.com/ | sh)

- name: Login to docker hub
  command: docker login -u {{ dockerhub_credentials.login }} -p {{ dockerhub_credentials.password }}
  when:
    - dockerhub_credentials is defined

# Installing nvidia runtime if that's needed
- name: Detecting GPUs
  apt:
    name: pciutils
    state: present

# test if we can find an nvidia device
- shell: lspci| grep -i nvidia
  register: stdout
  ignore_errors: yes

# Install the nvidia container runtime
# from https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html#setting-up-nvidia-container-toolkit
- name: Installing nvidia-container-toolkit
  shell: >
    distribution=$(. /etc/os-release;echo $ID$VERSION_ID) &&
    curl -s -L https://nvidia.github.io/libnvidia-container/gpgkey |
    sudo gpg --batch --yes --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg &&
    curl -s -L https://nvidia.github.io/libnvidia-container/$distribution/libnvidia-container.list |
    sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' |
    sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list &&
    apt update &&
    apt install -y nvidia-docker2 &&
    service docker restart
  when:
    - stdout is defined
    - stdout.rc == 0
